(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{182:function(n,a,s){"use strict";s.r(a);var e=s(0),t=Object(e.a)({},(function(){this._self._c;return this._m(0)}),[function(){var n=this,a=n._self._c;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"halcon视觉学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#halcon视觉学习"}},[n._v("#")]),n._v(" halcon视觉学习")]),n._v(" "),a("h3",{attrs:{id:"_1-1-halcon软件界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-halcon软件界面"}},[n._v("#")]),n._v(" 1.1 halcon软件界面")]),n._v(" "),a("blockquote",[a("p",[n._v("halcon的功能模式有点像markdown编辑器，利用窗口操作来转化成你要编的程序，这样可以减低开发成本，halcon是面向开发期短的工作岗位和机器视觉。")])]),n._v(" "),a("p",[n._v("可以看这篇：基本操作索引")]),n._v(" "),a("p",[n._v("软件界面主要分为以下窗口\n1.图形窗口：图像可视化\n2.算子窗口：算子手动修改，操作化\n3.变量窗口：方便查询变量\n4.程序窗口：编写代码")]),n._v(" "),a("h3",{attrs:{id:"_1-1-1-halcon常用快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-halcon常用快捷键"}},[n._v("#")]),n._v(" 1.1.1 halcon常用快捷键")]),n._v(" "),a("p",[n._v("ctrl+E 打开浏览例程\nctrl+F 查找\nF1 查看帮助\nF2 重置程序\nF3 取消注释\nF4 注释\nF5 运行程序\nF6 单步运行程序")]),n._v(" "),a("p",[n._v("3.1 图像显示\n算子\t功能\t单词\ndev_open_window\t新建图像窗口\t开发\ndis_display\t图像显示\t\ndisp_message\t显示字符串\t信息\nwrite_string\t在设定的光标位置， write string\t\nset_tposition\t配合write_string，设置光标位置\t\n4.1 图像转换\n算子\t功能\t单词\nrgb1_to_gray\trgb 转 gray\t\nregion_to_mean\t平均灰度值\t\nregion_to_bin\t转二进制图像（二值图像）\t\nregion_to_label\t转标签图像（其他算子使用？）\t标签")]),n._v(" "),a("h3",{attrs:{id:"_1-1-3-基本函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-基本函数"}},[n._v("#")]),n._v(" 1.1.3  基本函数")]),n._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[n._v("*读取一张彩色图像\nread_image (Image,'blister/blister_reference')\n*得到图像通道数\ncount_channels(Image,Channels)\n*彩色图像转灰度图\nrgb1_to_gray(Image, GrayImage)\n*彩色图像分离为三个通道图像\ndecompose3(Image,R,G,B)\n*RGB转HSV和HSI\ntrans_from_rgb(R,G,B,H1,S1,V1,'hsv')\ntrans_from_rgb(R,G,B,H2,S2,I2,'hsi')\n*HSV和HIS转RGB\ntrans_to_rgb(H1,S1,V1,ImageRed, ImageGreen,ImageBlue, 'hsv')\ntrans_to_rgb(H2,S2,I2,ImageRed1,ImageGreen1, ImageBlue1, 'hsi')\n\n*将转换后的单通道RGB合并成RGB彩色图\ncompose3(ImageRed,ImageGreen,ImageBlue,ImageRGB)\n*图像均值模糊\nmean_image(GrayImage,ImageMean, 9, 9)\n*图像相加，相减，相减的绝对值，线性拉伸，图像相乘除\nadd_image(GrayImage, ImageMean,ImageResult, 0.5, 0)\nsub_image(GrayImage,ImageMean,ImageSub, 1,128)\nabs_diff_image(GrayImage,ImageMean,ImageAbsDiff,1)\nscale_image(ImageAbsDiff, ImageScaled, 5,20)\nmult_image(GrayImage,ImageMean,ImageResult1,0.005, 0)\ndiv_image(GrayImage,ImageMean,ImageResult2,255, 0)\n\n*指数、gamma变换、图像反转、对数、幂、开方\nexp_image(GrayImage,ExpImage, 'e')\ngamma_image(GrayImage,GammaImage,0.416667,0.055, 0.0031308, 255, 'true')\ninvert_image(GrayImage,ImageInvert)\nlog_image(GrayImage,LogImage, 'e')\npow_image(GrayImage,PowImage, 2)\nsqrt_image(GrayImage,SqrtImage)\npow_image(SqrtImage, PowImage1, 3)\n\n*图像数据格式转换\nconvert_image_type(GrayImage,ImageConverted,'real')\n\n*三角函数运算\nsin_image(ImageConverted, SinImage)\ncos_image(ImageConverted,CosImage)\ntan_image(ImageConverted,TanImage)\nasin_image(SinImage,ArcsinImage)\nacos_image(CosImage,ArccosImage)\natan_image(TanImage,ArctanImage)\n*取两幅图像的最大值或最小值\nmax_image(GrayImage,ImageMean,ImageMax)\nmin_image(GrayImage,ImageMean,ImageMin)\n*创建一个单位变换矩阵，每次根据创建的平移或、旋转或缩放矩阵对图像进行平移、旋转、缩放操作\nhom_mat2d_identity(HomMat2DIdentity)\n*创建平移矩阵\nhom_mat2d_translate(HomMat2DIdentity,20,50,HomMat2DTranslate)\n*图像平移\naffine_trans_image(GrayImage,ImageAffineTrans,HomMat2DTranslate, 'constant', 'false')\nget_image_size(GrayImage,Width, Height)\n*创建旋转矩阵\nhom_mat2d_rotate(HomMat2DIdentity,rad(45),Width/2,Height/2, HomMat2DRotate)\n\n*图像旋转\naffize_trans_image(GrayImage,ImageAffineTrans1,HomMat2DRotate, 'constant', 'false')\n\n*创建缩放矩阵\nhom_mat2d_scale(HomMat2DIdentity, 2, 1.5,Width/2, Height/2, HomMat2DScale)\n\n*图像缩放\naffine_trans_image(GrayImage,ImageAffineTrans2,HomMat2DScale, 'constant', 'false')\n\n*根据图像得到的region，通过计算中心和方向，利用vector_angle_to_rigid得到变换矩阵，然后进行图像放射变换\nthreshold(GrayImage,Region, 128, 255)\nshape_trans(Region, RegionTrans, 'convex')\norientation_region(RegionTrans, Phi)\narea_center(RegionTrans, Area, Row, Column)\nvector_angle_to_rigid(Row, Column, Phi,Row, Column, 0, HomMat2D)\naffine_trans_image(GrayImage,ImageAffineTrans3,HomMat2D, 'constant', 'false')\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br")])]),a("h3",{attrs:{id:"_2-1-窗口显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-窗口显示"}},[n._v("#")]),n._v(" 2.1 窗口显示")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("dev_update_window ('off')\ndev_update_window ('on')程序执行打开和关闭期间，图像对象是否在图形窗口中显示\ndev_clear_window ()\ndev_close_window ()\ndev_open_window (0, 0, Width, Height, 'black', WindowHandle)后面可以在这个句柄上显示\n\ndev_set_draw ('margin')\ndev_set_color ('white')\ndev_set_colored (12)\ndev_set_line_width (3)\ndev_set_part( : : Row1, Column1, Row2, Column2 : )设置图形窗口中要显示的图像部分。 参数Row1和Column1指定左上角，Row2和Column2指定要显示的图像部分的右下角。\nget_system ('operating_system', OS)\n\ndev_display (Image)\nset_display_font (WindowHandleZoom, 14, 'mono', 'true', 'false')\ndisp_continue_message (WindowID, 'black', 'true')\ndisp_ellipse (WindowID, Row, Column, Phi, Ra, Rb)\ndisp_cross (WindowHandle, RowCenterRegion, ColumnCenterRegion, 15, 0)\ndisp_arrow (WindowHandle, RowCenterRegion, ColumnCenterRegion, RowCenterRegion - 60 *sin(OrientationRegion), ColumnCenterRegion + 60 * cos(OrientationRegion), 2)\nwrite_string(WindowHandle3, '请用鼠标画ROI')窗口写字\nget_mbutton( : : WindowHandle : Row, Column, Button )原地等待直到鼠标按下\ndump_window_image (DumpImage, WindowHandle)将窗口的内容截图成图像\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("h3",{attrs:{id:"_2-2-窗口显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-窗口显示"}},[n._v("#")]),n._v(" 2.2 窗口显示")]),n._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[n._v("## 图像、区域\nread_image\nwrite_image 第3个参数FillColor是输入变量，表示不属于图像区域的灰度像素填充值，默认值为0。\ndump_window_image将窗口内其它信息（如箭头，指示文字等）也保存进Image，然后write_image保存；\nparse_filename(ImageFiles, BaseName, Extension, Directory)获取文件名、后缀、文件夹\nget_image_size\nzoom_image_factor(Image : ImageZoomed : ScaleWidth, ScaleHeight, Interpolation : )根据缩放因子实现图像缩放\nzoom_image_size(Image : ImageZoom : Width, Height, Interpolation : )根据尺寸进行图像的缩放\nconvert_image_type\nchannels_to_image把单通道图像转变为一个多通道图像。\nrgb1_to_gray\n\nscale_image(Image : ImageScaled : Mult, Add : )  图像灰度比例拉伸运算（黑的地方更黑，亮的地方更亮），    g’ := g * Mult + Add\nemphasize (ImageInvert, ImageEmphasize, Width, Height, 1)增强图像的高频区域（边缘和拐角）的对比度， res := round((orig - mean) * Factor) + orig\nilluminate(Image : ImageIlluminate : MaskWidth, MaskHeight, Factor : )增强图像的高频区域（边缘和拐角）的对比度\n\n\nadd_image\nmax_image\ninvert_image\nmean_image\ntile_images(Images : TiledImage : NumColumns, TileOrder : )NumColumns指最终拼成的图有多少列，TileOrder指子图片排列的顺序——垂直方向还是水平方向\ntile_images_offset(Images : TiledImage : OffsetRow, OffsetCol, Row1, Col1, Row2, Col2, Width, Height : )\ngen_image_const (ConstImage, 'byte', 11, 11)创建一个灰度值不变的图像\nedges_image (Image, ImaAmp, ImaDir, 'mderiche2', 0.7, 'nms', 10, 20)使用Deriche、_Lanser、Shen或者_Canny滤波器提取只包含边缘的图像。\nmirror_image (Image, ImageMirror, 'row')图像的镜像\n\nadd_channels 为区域添加灰度值\nshape_trans (SelectedRegions, RegionTrans, 'rectangle2')*区域转化为矩形\ncompose3 (ImageRed, ImageGreen, ImageBlue, LogoImageTempl)将三幅图像合并成一幅图像\ndecompose3 (LogoImage, ImageR, ImageG, ImageB)将一幅图像根据RGB值转换成三幅图像。\naccess_channel(MultiChannelImage : Image : Channel : )访问多通道输入图像的某一个通道。 结果是一个单通道图像\nintersection取出两个区域中重叠的部分\ndifference取出两个区域中不重叠的部分\ncomplement(Region : RegionComplement : : )找到输入区域的补区域。\nintensity(Regions,Images:::Mean,Deviation)计算Images中Regions的均值和方差。\n\nget_domain (Image, Domain)图像转换成区域\nreduce_domain获得特定区域Region位置的图像，不裁剪\nmove_region\nzoom_region(Region : RegionZoom : ScaleWidth, ScaleHeight : )根据缩放因子对区域缩放\ncrop_domain对特定区域图像进行裁剪\ncrop_part从每个输入图像中剪切一个或多个矩形区域。 区域由矩形指示，这些矩形由其左上角的坐标及其大小定义。\nconnection将区域分散开，只要是没有交集的区域，都分成不同的单独小区域\nselect_shape\nselect_shape_std\nselect_shape_proto (Pads, BallBonds, MissingBonds, 'overlaps_rel', 0, 0)选出具有相似特征的所有区域\nunion1返回所有输入区域的并集\nunion2返回两个区域的并集\nconcat_obj通过concat只是把objects放到一起，没有实质上的合并，依然各过各的，union完之后，object就完全变成了一个了，不再好分开\nskeleton骨架\ncount_obj\nboundary边界\nfill_up\nfill_up_shape\narea_center一个区域的面积（大小）和中心\nsmallest_circle最小外接圆的中心坐标和半径会被返回\ninner_circle最大内接圆\ngen_circle\ndiameter_region最小外接圆直径\nsmallest_rectangle2 (RegionTrans, Row, Column, Phi, Length1, Length2)\ngen_rectangle2 (Rectangle, 300, 200, Phi, 100, 1)生成矩形\n\nclip_region_rel (RegionBorder, RegionClipped, 5, 5, 5, 5)剪切的方法按照输入参数顶部剪切的行数，底部剪切的行数，左边剪切的列数，右边剪切的列数。\nclip_region (HighZoomedMoved, HighAreas, 0, 0, 511, 511)剪切region里一个矩形出来，需要填入矩形的左上角点和右下角点，进行剪切\nregion_to_bin(Region : BinImage : ForegroundGray, BackgroundGray, Width, Height : )在Region中给定的输入区域转换为“字节”图像，并将ForegroundGray的灰度值分配给该区域中的所有像素。 如果输入区域大于生成的图像，则会在图像边框处裁剪。 背景灰度值设置为BackgroundGray。\n\n## 区域延伸\nexpand_gray_ref (Regions, Image, EmptyRegion, RegionExpand, 'maximal', 'image', Mean, 11)根据灰度和颜色将分离的区域连通。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br")])]),a("h3",{attrs:{id:"_2-3-常用算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常用算子"}},[n._v("#")]),n._v(" 2.3 常用算子")]),n._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[n._v("* 图片信息获取\nget_image_size * 获取图像尺寸\nget_image_type * 图像类型 byte,int1,uint2 int2,int4 direction,real\nget_image_time * 获取图像时间\nget_image_pointer1 * 获取单通道的指针，尺寸类型\ncompose3 * 把3通道图像合成彩色图像\ndecompose3 * 把彩色图像解析成3通道图像\nrgb_to_gray1|3 * 计算一种或三种通道的灰度值\n\n* 颜色通道转换\ntran_from_rgb * 把rgb 格式转化成为HSV|HSI\ntran_to_rgb   * 把HSV|HSI 格式转化成为rgb \nthreshold     * 阈值分割/直方图选取 区域\nthreshold_sub_xld     * 亚像素阈值分割/直方图选取轮廓，是以线，点为单位\nbinary_threshold     * 自动获取阈值完成分割\n\n\nconnection    * 获取区域分组\nselect_shape  * 获取特征区域\nselect_contous_xld 轮廓选择\ncount_obj * 统计轮廓个数\ngen_region_contoours_xml * 把轮廓填充为区域\nfill_up       * 填充特征区域\nreduce_domain * 从原图中扣去特征图相同的区域\nmean_image * 计算均值滤波\ndyn_threshold     * 局部阈值分割 与mean_image 一起使用，选取比均值大或小的区域\n\n* 腐蚀膨胀\ndilation_circle\ndilation_rectangle1\n\ngray_closing (Image, ImageReduced, ImageClosingFast)灰度值闭操作,结构元素在图像中遍历，灰度值最低的值作为新值，有使图像变暗的作用。\ngray_opening (Image, ImageReduced, ImageOpeningFast) 灰度值开操作,结构元素在图像中遍历，灰度值最高的值作为新值，有使图像变亮的作用。\n\n*  修改图像或区域的值\ngen_image_const(Image,'byte',512,512)    //生成一个纯0图像，用byte格式\ngen_image_proto (ImageReduced, ImageCleared, 255) 创建纯白图像\noverpaint_gray ( ImageDestination, ImageSource : : : )  将灰度值不相同区域用不同颜色绘制到ImageDestination中，ImageSource包含希望的灰度值图像\noverpaint_region ( Image, Region : : Grayval, Type : ) 将Region以一个恒定的灰度值绘制到Image图像中\npaint_gray ( ImageSource, ImageDestination : MixedImage : : ) 将ImageSource的图像绘制到ImageDestination中，形成MixedImage。\npaint_region ( Region, Image : ImageResult : Grayval, Type : ) 将Region以一个恒定的灰度值绘制到Image图像中\npaint_xld ( XLD, Image : ImageResult : Grayval : ) 将XLD以一个恒定的灰度值绘制到Image图像中\n    \nget_region_points(RegionUnion, Rows, Columns)查询一个区域的像素坐标\nget_grayval(DupImage2, Rows, Columns, Grayval)获得像素坐标对应像素值\nset_grayval ( Image : : Row, Column, Grayval : ) 设置Image图像中坐标为（Row，Column）的灰度值\n\n* 仿射变换\n两种实现旋转的方法rotate_image和affine_trans_image\nrotate_image是按逆时针方向进行旋转，而且旋转后的图片大小不变，但内容可能会有缺失。并且物体的中心在原图的位置和在旋转之后图片上的位置还会有差异。\n为了解决使用rotate_image进行旋转产生的问题，可以所以建议使用旋转矩阵affine_trans_image来进行旋转。\n\ntext_line_slant (Image, Image, 140, -rad(45), rad(45), SlantAngle)自动检索文本行的斜率，第三个参数为字体拉升长度 >=原字符长度\nhom_mat2d_slant (HomMat2DIdentity, -SlantAngle, 'x', 0, 0, HomMat2DSlant)向生成的二维变换的齐次变换矩阵中添加斜率\norientation_region用来计算区域的方向，将区域拟合为最小椭圆时，该椭圆长轴与水平方向的夹角\ntext_line_orientation (Needle, Needle, 35, -0.523599, 0.523599, OrientationAngle)确定文本行或段落的方向。\nvector_angle_to_rigid (Row, Column, Phi, Row, Column, AimPhi, HomMat2D) 获得仿射变换矩阵\nhom_mat2d_identity (HomMat2DIdentity)生成一个2D单位矩阵\nhom_mat2d_translate (HomMat2DIdentity, -0.5*(Row1+Row2), -0.5*(Column1+Column2), HomMat2DTranslate)对矩阵进行变换，用于平移。\nhom_mat2d_rotate (HomMat2DIdentity, -OrientationAngle, Px, Py, HomMat2DRotate)用于旋转\nhom_mat2d_scale (HomMat2DTranslate, ScaleFactor, ScaleFactor, 0, 0, HomMat2DScale) 用于缩放\naffine_trans_image对图像进行仿射变换\nrotate_image (ImageScaleMax, ImageRotate, deg(-OrientationAngle), 'constant')将图像按照指定的角度旋转\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br")])]),a("p",[a("img",{attrs:{src:"halcon.assets/image-20230219192443436.png",alt:"image-20230219192443436"}})]),n._v(" "),a("p",[a("img",{attrs:{src:"halcon.assets/image-20230221223011581.png",alt:"image-20230221223011581"}})]),n._v(" "),a("h3",{attrs:{id:"_2-4-数学几何算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-数学几何算子"}},[n._v("#")]),n._v(" 2.4 数学几何算子")]),n._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[n._v("* 求角度\n计算直线与水平轴之间的夹角 angle_lx( : : Row1, Column1, Row2, Column2 : Angle)\n计算两条直线之间的夹角angle_ll( : : RowA1, ColumnA1, RowA2, ColumnA2, RowB1, ColumnB1, RowB2, ColumnB2 : Angle)\n计算一条直线的方向line_orientation( : : RowBegin, ColBegin, RowEnd, ColEnd : Phi)\n计算一条直线的参数line_position( : : RowBegin, ColBegin, RowEnd, ColEnd : RowCenter, ColCenter, Length, Phi)\n计算区域等效椭圆的参数elliptic_axis(Regions : : : Ra, Rb, Phi)\n计算区域的最小仿射外接矩形的参数smallest_rectangle2(Regions : : : Row, Column, Phi, Length1, Length2)\n计算区域的方向orientation_region(Regions : : : Phi)\n\n* 求距离\ndistance_pl：只算点到直线的距离。\ndistance_pp：计算两点之间的距离。\nprojection_pl：计算一个点到直线的垂足。\nangle_ll：计算两条直线的夹角。\nangle_lx：计算直线和x轴的夹角。\n\n1.已知点与直线 求垂足\n点（X,Y）\n线（BeginX，BeginY，EndX，EndY）\nprojection_pl (X, Y, BeginX, BeginY, EndX, EndX, 垂足X, 垂足Y)\n\n2.已知一线轮廓与所求平行线之间距离\n已知线轮廓：contour\n已知距离：Distance\ngen_parallel_contour_xld(contour, parallelcontour, ‘regression_normal’, -Distance)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br")])]),a("p",[a("img",{attrs:{src:"halcon.assets/2f90cbc1e6c04fc99dbb9d7a343bac8d.png",alt:"在这里插入图片描述"}})]),n._v(" "),a("h3",{attrs:{id:"_2-5-正则运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-正则运算"}},[n._v("#")]),n._v(" 2.5 正则运算")]),n._v(" "),a("p",[a("img",{attrs:{src:"halcon.assets/5964f8c48b61480b874cdc72d9c985cb.png",alt:"img"}})])])}],!1,null,null,null);a.default=t.exports}}]);